{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:31:45 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:33:33 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:35:04 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:38:21 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:38:46 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:40:05 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:58:33 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 12:59:23 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"err":"\"confirm_password\" is required","method":"POST","path":"/api/v1/user","query":{}},"timestamp":"22-11-05 01:00:27 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"msg":"参数错误","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 02:07:54 AM"}
{"level":"error","message":{"body":{"confirm_password1":"con_pwd","name":"test","password":"pwd"},"msg":"\"confirm_password\" is required","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 02:09:43 AM"}
{"level":"error","message":{"body":{"confirm_password":"con_pwd","name1":"test","password":"pwd"},"msg":"用户名必填","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 02:09:49 AM"}
{"level":"error","message":{"body":{"confirm_password":"con_pwd","name1":"test","password":"pwd"},"msg":"用户名必填","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 02:12:45 AM"}
{"level":"error","message":{"body":{"confirm_password":"con_pwd","name":"test","password":"pwd"},"msg":"两次密码不一致","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:00:48 AM"}
{"level":"error","message":{"body":{"confirm_password":"con_pwd","name":"test","password":"pwd"},"msg":"两次密码不一致","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:01:34 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.create()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:20:31\n\n  17     commonRes.error('ParameterException', '两次密码不一致')\n  18 }\n  19 \n→ 20 const res = await db.user.create(\nFailed to validate the query: `Unable to match input value to any allowed input type for the field. Parse errors: [Query parsing/validation error at `Mutation.createOneUser.data.UserCreateInput.password`: A value is required but not set., Query parsing/validation error at `Mutation.createOneUser.data.UserUncheckedCreateInput.password`: A value is required but not set.]` at `Mutation.createOneUser.data`","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:05:54 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.create()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:20:31\n\n  17     commonRes.error('ParameterException', '两次密码不一致')\n  18 }\n  19 \n→ 20 await db.user.create(\nFailed to validate the query: `Unable to match input value to any allowed input type for the field. Parse errors: [Query parsing/validation error at `Mutation.createOneUser.data.UserCreateInput.password`: A value is required but not set., Query parsing/validation error at `Mutation.createOneUser.data.UserUncheckedCreateInput.password`: A value is required but not set.]` at `Mutation.createOneUser.data`","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:08:27 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:32:29 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:34:12 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:34:29 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:35:03 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:37:09 AM"}
{"level":"error","message":"Configuration property \"page.page_size\" is not defined","timestamp":"22-11-05 04:37:09 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:37:56 AM"}
{"level":"error","message":"Configuration property \"page.page_size\" is not defined","timestamp":"22-11-05 04:37:56 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:38:06 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:38:39 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"Page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:40:58 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"Configuration property \"page.page_size\" is not defined","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:43:20 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.findMany()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:16:36\n\n  13 \n  14 const { skip, take } = getPager(page_no, page_size)\n  15 \n→ 16 const userList = await db.user.findMany({\n       where: {\n         is_del: false\n       },\n       skip: NaN,\n             ~~~\n       take: undefined\n     })\n\nArgument skip: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\n\n","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:44:36 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `prisma.user.findMany()` invocation:\n\n{\n  where: {\n    is_del: false\n  },\n  skip: NaN,\n        ~~~\n  take: undefined\n}\n\nArgument skip: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\n\n","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:45:05 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.findMany()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:16:36\n\n  13 \n  14 const { skip, take } = getPager(page_no, page_size)\n  15 \n→ 16 const userList = await db.user.findMany({\n       where: {\n         is_del: false\n       },\n       skip: NaN,\n             ~~~\n       take: undefined\n     })\n\nArgument skip: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\n\n","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:45:36 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.findMany()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:16:36\n\n  13 \n  14 const { skip, take } = getPager(page_no, page_size)\n  15 \n→ 16 const userList = await db.user.findMany({\n       where: {\n         is_del: false\n       },\n       skip: NaN,\n             ~~~\n       take: undefined\n     })\n\nArgument skip: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\n\n","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 04:46:25 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\"value\" is not allowed","query":{"":"","page_no":"1","page_size":"2"},"url":"http://localhost:8080/api/v1/user?page_no=1&page_size=2&="},"timestamp":"22-11-05 04:50:17 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\"aa\" is not allowed","query":{"aa":"2","page_no":"1","page_size":"2"},"url":"http://localhost:8080/api/v1/user?page_no=1&page_size=2&aa=2"},"timestamp":"22-11-05 04:50:43 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.findMany()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:11:36\n\n   8 export async function getUserList(ctx: Context) {\n   9     const { skip, take } = getPager(ctx)\n  10 \n→ 11     const userList = await db.user.findMany({\n           where: {\n             is_del: false\n           },\n           skip: NaN,\n                 ~~~\n           take: 2\n         })\n\nArgument skip: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\n\n","query":{"page_no":"a","page_size":"2"},"url":"http://localhost:8080/api/v1/user?page_no=a&page_size=2"},"timestamp":"22-11-05 05:00:50 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\"page_no\" must be a number","query":{"page_no":"a","page_size":"2"},"url":"http://localhost:8080/api/v1/user?page_no=a&page_size=2"},"timestamp":"22-11-05 05:04:55 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\nInvalid `db.user.findMany()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:11:36\n\n   8 export async function getUserList(ctx: Context) {\n   9     const { skip, take } = getPager(ctx)\n  10 \n→ 11     const userList = await db.user.findMany({\n           where: {\n             is_del: false\n           },\n           skip: NaN,\n                 ~~~\n           take: NaN\n                 ~~~\n         })\n\nArgument skip: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\nArgument take: Got invalid value NaN on prisma.findManyUser. Provided Float, expected Int.\n\n","query":{},"url":"http://localhost:8080/api/v1/user"},"timestamp":"22-11-05 05:05:38 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\"confirm_password\" is not allowed","query":{},"url":"http://localhost:8080/api/v1/user/1"},"timestamp":"22-11-05 05:25:25 AM"}
{"level":"error","message":{"body":{"confirm_password":"pwd","name":"test","password":"pwd"},"msg":"\"confirm_password\" is not allowed","query":{},"url":"http://localhost:8080/api/v1/user/1"},"timestamp":"22-11-05 05:26:34 AM"}
{"level":"error","message":{"body":{"name":"test","password":"pwd11"},"msg":"\nInvalid `db.user.update()` invocation in\n/Users/zyd/Documents/code/node/koa-blog/src/controller/user.ts:37:19\n\n  34 const { name, password } = validate(UserDto.updateUserDto, ctx.request.body)\n  35 const id = +ctx.params.id\n  36 \n→ 37 await db.user.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","query":{},"url":"http://localhost:8080/api/v1/user/1"},"timestamp":"22-11-05 05:29:17 AM"}
{"level":"error","message":{"body":{"name":"test","password":"pwd11"},"msg":"不存在此用户","query":{},"url":"http://localhost:8080/api/v1/user/1"},"timestamp":"22-11-05 05:31:31 AM"}
{"level":"error","message":{"body":{"name":"test","password":"pwd11"},"msg":"不存在此用户","query":{},"url":"http://localhost:8080/api/v1/user/1"},"timestamp":"22-11-05 07:04:05 PM"}
{"level":"error","message":{"body":{"name1":"test","password":"pwd11"},"msg":"\"name1\" is not allowed","query":{},"url":"http://localhost:8080/api/v1/user/7"},"timestamp":"22-11-05 07:18:32 PM"}
{"level":"error","message":{"body":{"name":"test","password":"pwd11"},"msg":"此用户不存在","query":{},"url":"http://localhost:8080/api/v1/user/7"},"timestamp":"22-11-05 07:19:14 PM"}
